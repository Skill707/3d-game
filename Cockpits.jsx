/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/cockpits.glb 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/cockpits.glb')
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cockpit_1.geometry} material={materials['PartMaterial(Clone)']} />
        <mesh geometry={nodes.Cockpit_2.geometry} material={materials['PartMaterial(Clone)(Clone) (Instance)']} />
        <mesh geometry={nodes.Cockpit_3.geometry} material={materials['LiberationSans SDF Material Instance']} />
        <mesh geometry={nodes.Cockpit_4.geometry} material={materials['Jefferies Atlas Material Instance']} />
        <mesh geometry={nodes.Cockpit_5.geometry} material={materials['Part Material BDM']} />
        <mesh geometry={nodes.Cockpit_6.geometry} material={materials['PartTransparent(Clone)']} />
        <mesh geometry={nodes.Cockpit_7.geometry} material={materials['PartTransparentZWrite(Clone)']} />
        <mesh geometry={nodes.Cockpit_8.geometry} material={materials['DesignerPartSelected(Clone) (Instance)']} />
        <mesh geometry={nodes.Cockpit_9.geometry} material={materials['LiberationSans SDF Material (Instance)']} />
      </group>
      <mesh geometry={nodes.Chip.geometry} material={materials['PartMaterial(Clone)']} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/cockpits.glb')
